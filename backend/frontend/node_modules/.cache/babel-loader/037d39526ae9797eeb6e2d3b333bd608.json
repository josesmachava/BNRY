{"ast":null,"code":"var _jsxFileName = \"/home/josemachava/Documents/learn/MERN/photos/backend/frontend/src/components/slider/Slider.js\";\nimport React from 'react';\nimport LeftArrow from './LeftArrow';\nimport Slide from './Slide';\nimport RightArrow from './RightArrow';\nimport axios from 'axios';\nimport \"./Slider.css\";\n\nclass Slider extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.goToPrevNumber = () => {\n      return this.state.currentIndex;\n    };\n\n    this.goToPrevSlide = () => {\n      if (this.state.currentIndex === 0) return;\n      this.setState(prevState => ({\n        currentIndex: prevState.currentIndex - 1,\n        translateValue: prevState.translateValue + this.slideWidth()\n      }));\n    };\n\n    this.goToNextSlide = () => {\n      // Exiting the method early if we are at the end of the images array.\n      // We also want to reset currentIndex and translateValue, so we return\n      // to the first image in the array.\n      if (this.state.currentIndex === this.state.photos.length - 1) {\n        return this.setState({\n          currentIndex: 0,\n          translateValue: 0\n        });\n      } // This will not run if we met the if condition above\n\n\n      this.setState(prevState => ({\n        currentIndex: prevState.currentIndex + 1,\n        translateValue: prevState.translateValue + -this.slideWidth()\n      }));\n    };\n\n    this.slideWidth = () => {\n      return document.querySelector('.slide').clientWidth;\n    };\n\n    this.state = {\n      photos: [],\n      currentIndex: 0,\n      translateValue: 0\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5001/').then(res => {\n      const photos = res.data;\n      console.log(res.data);\n      this.setState({\n        photos\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"slider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"slider-wrapper\",\n      style: {\n        transform: \"translateX(\".concat(this.state.translateValue, \"px)\"),\n        transition: 'transform ease-out 0.45s'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, this.state.photos.map((image, i) => React.createElement(Slide, {\n      key: i,\n      image: image.url,\n      legend: image.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }))), React.createElement(LeftArrow, {\n      goToPrevSlide: this.goToPrevSlide,\n      message: this.getCurrent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(RightArrow, {\n      goToNextSlide: this.goToNextSlide,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Slider;","map":{"version":3,"sources":["/home/josemachava/Documents/learn/MERN/photos/backend/frontend/src/components/slider/Slider.js"],"names":["React","LeftArrow","Slide","RightArrow","axios","Slider","Component","constructor","props","goToPrevNumber","state","currentIndex","goToPrevSlide","setState","prevState","translateValue","slideWidth","goToNextSlide","photos","length","document","querySelector","clientWidth","componentDidMount","get","then","res","data","console","log","render","transform","transition","map","image","i","url","description","getCurrent"],"mappings":"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","sourcesContent":["\n\nimport React from 'react';\nimport LeftArrow from './LeftArrow';\nimport Slide from './Slide';\nimport RightArrow from './RightArrow';\nimport axios from 'axios';\n\nimport \"./Slider.css\"\n\n\n\n\n\nclass Slider extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      photos: [],\n      currentIndex: 0,\n      translateValue: 0\n    }\n  }\n  componentDidMount() {\n    axios.get('http://localhost:5001/')\n      .then(res => {\n        const photos = res.data;\n        console.log(res.data)\n        this.setState({ photos });\n      })\n  }\n  goToPrevNumber = () => {\n  \n    return this.state.currentIndex;\n  }\n  goToPrevSlide = () => {\n    if(this.state.currentIndex === 0)\n      return;\n    \n    this.setState(prevState => ({\n      currentIndex: prevState.currentIndex - 1,\n      \n      translateValue: prevState.translateValue + this.slideWidth()\n    }))\n  }\n\n  goToNextSlide = () => {\n    // Exiting the method early if we are at the end of the images array.\n    // We also want to reset currentIndex and translateValue, so we return\n    // to the first image in the array.\n    if(this.state.currentIndex === this.state.photos.length - 1) {\n      return this.setState({\n        currentIndex: 0,\n        translateValue: 0\n      })\n    }\n \n    \n    \n    // This will not run if we met the if condition above\n    this.setState(prevState => ({\n      currentIndex: prevState.currentIndex + 1,\n      translateValue: prevState.translateValue + -(this.slideWidth())\n    }));\n    \n    \n  }\n \n  slideWidth = () => {\n     return document.querySelector('.slide').clientWidth\n  }\n\n  render() {\n    return (\n      <div className=\"slider\">\n\n        <div className=\"slider-wrapper\"\n          style={{\n            transform: `translateX(${this.state.translateValue}px)`,\n            transition: 'transform ease-out 0.45s'\n          }}>\n            {\n              this.state.photos.map((image, i) => (\n                \n                <Slide key={i} image={image.url} legend={image.description}  />\n            \n                \n              ))\n            }\n        </div>\n        <LeftArrow \n         goToPrevSlide={this.goToPrevSlide}  message={this.getCurrent}\n        />\n\n\n        <RightArrow\n         goToNextSlide={this.goToNextSlide}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Slider;"]},"metadata":{},"sourceType":"module"}