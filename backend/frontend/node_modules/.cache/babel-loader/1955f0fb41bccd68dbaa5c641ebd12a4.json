{"ast":null,"code":"var _jsxFileName = \"/home/josemachava/Documents/learn/MERN/photos/backend/frontend/src/components/slider/Slider.js\";\nimport React, { useState, useEffect } from 'react';\nimport LeftArrow from './LeftArrow';\nimport Slide from './Slide';\nimport RightArrow from './RightArrow';\nimport \"./Slider.css\";\n\nclass Slider extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.goToPrevSlide = () => {\n      if (this.state.currentIndex === 0) return;\n      this.setState(prevState => ({\n        currentIndex: prevState.currentIndex - 1,\n        translateValue: prevState.translateValue + this.slideWidth()\n      }));\n    };\n\n    this.goToNextSlide = () => {\n      // Exiting the method early if we are at the end of the images array.\n      // We also want to reset currentIndex and translateValue, so we return\n      // to the first image in the array.\n      if (this.state.currentIndex === this.state.images.length - 1) {\n        return this.setState({\n          currentIndex: 0,\n          translateValue: 0\n        });\n      } // This will not run if we met the if condition above\n\n\n      this.setState(prevState => ({\n        currentIndex: prevState.currentIndex + 1,\n        translateValue: prevState.translateValue + -this.slideWidth()\n      }));\n    };\n\n    this.slideWidth = () => {\n      return document.querySelector('.slide').clientWidth;\n    };\n\n    this.state = {\n      images: [\"https://s3.us-east-2.amazonaws.com/dzuz14/thumbnails/aurora.jpg\", \"https://s3.us-east-2.amazonaws.com/dzuz14/thumbnails/canyon.jpg\", \"https://s3.us-east-2.amazonaws.com/dzuz14/thumbnails/city.jpg\", \"https://s3.us-east-2.amazonaws.com/dzuz14/thumbnails/desert.jpg\", \"https://s3.us-east-2.amazonaws.com/dzuz14/thumbnails/mountains.jpg\", \"https://s3.us-east-2.amazonaws.com/dzuz14/thumbnails/redsky.jpg\", \"https://s3.us-east-2.amazonaws.com/dzuz14/thumbnails/sandy-shores.jpg\", \"https://s3.us-east-2.amazonaws.com/dzuz14/thumbnails/tree-of-life.jpg\"],\n      currentIndex: 0,\n      translateValue: 0\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5001/').then(res => {\n      const photos = res.data;\n      console.log(res.data);\n      this.setState({\n        photos\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"slider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"slider-wrapper\",\n      style: {\n        transform: \"translateX(\".concat(this.state.translateValue, \"px)\"),\n        transition: 'transform ease-out 0.45s'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.state.images.map((image, i) => React.createElement(Slide, {\n      key: i,\n      image: image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }))), React.createElement(LeftArrow, {\n      goToPrevSlide: this.goToPrevSlide,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(RightArrow, {\n      goToNextSlide: this.goToNextSlide,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Slider;","map":{"version":3,"sources":["/home/josemachava/Documents/learn/MERN/photos/backend/frontend/src/components/slider/Slider.js"],"names":["React","useState","useEffect","LeftArrow","Slide","RightArrow","Slider","Component","constructor","props","goToPrevSlide","state","currentIndex","setState","prevState","translateValue","slideWidth","goToNextSlide","images","length","document","querySelector","clientWidth","componentDidMount","axios","get","then","res","photos","data","console","log","render","transform","transition","map","image","i"],"mappings":"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","sourcesContent":["\n\nimport React, { useState, useEffect } from 'react';\nimport LeftArrow from './LeftArrow';\nimport Slide from './Slide';\nimport RightArrow from './RightArrow';\nimport \"./Slider.css\"\n\n\n\n\n\nclass Slider extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      images: [\n        \"https://s3.us-east-2.amazonaws.com/dzuz14/thumbnails/aurora.jpg\",\n        \"https://s3.us-east-2.amazonaws.com/dzuz14/thumbnails/canyon.jpg\",\n        \"https://s3.us-east-2.amazonaws.com/dzuz14/thumbnails/city.jpg\",\n        \"https://s3.us-east-2.amazonaws.com/dzuz14/thumbnails/desert.jpg\",\n        \"https://s3.us-east-2.amazonaws.com/dzuz14/thumbnails/mountains.jpg\",\n        \"https://s3.us-east-2.amazonaws.com/dzuz14/thumbnails/redsky.jpg\",\n        \"https://s3.us-east-2.amazonaws.com/dzuz14/thumbnails/sandy-shores.jpg\",\n        \"https://s3.us-east-2.amazonaws.com/dzuz14/thumbnails/tree-of-life.jpg\"\n      ],\n      currentIndex: 0,\n      translateValue: 0\n    }\n  }\n  componentDidMount() {\n    axios.get('http://localhost:5001/')\n      .then(res => {\n        const photos = res.data;\n        console.log(res.data)\n        this.setState({ photos });\n      })\n  }\n\n  goToPrevSlide = () => {\n    if(this.state.currentIndex === 0)\n      return;\n    \n    this.setState(prevState => ({\n      currentIndex: prevState.currentIndex - 1,\n      translateValue: prevState.translateValue + this.slideWidth()\n    }))\n  }\n\n  goToNextSlide = () => {\n    // Exiting the method early if we are at the end of the images array.\n    // We also want to reset currentIndex and translateValue, so we return\n    // to the first image in the array.\n    if(this.state.currentIndex === this.state.images.length - 1) {\n      return this.setState({\n        currentIndex: 0,\n        translateValue: 0\n      })\n    }\n    \n    // This will not run if we met the if condition above\n    this.setState(prevState => ({\n      currentIndex: prevState.currentIndex + 1,\n      translateValue: prevState.translateValue + -(this.slideWidth())\n    }));\n  }\n\n  slideWidth = () => {\n     return document.querySelector('.slide').clientWidth\n  }\n\n  render() {\n    return (\n      <div className=\"slider\">\n\n        <div className=\"slider-wrapper\"\n          style={{\n            transform: `translateX(${this.state.translateValue}px)`,\n            transition: 'transform ease-out 0.45s'\n          }}>\n            {\n              this.state.images.map((image, i) => (\n                <Slide key={i} image={image} />\n              ))\n            }\n        </div>\n\n        <LeftArrow\n         goToPrevSlide={this.goToPrevSlide}\n        />\n\n        <RightArrow\n         goToNextSlide={this.goToNextSlide}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Slider;"]},"metadata":{},"sourceType":"module"}