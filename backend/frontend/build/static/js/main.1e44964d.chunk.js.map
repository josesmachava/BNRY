{"version":3,"sources":["components/navegation.component.js","components/create-photo.component.js","components/photo-list.component.js","components/edit-photo.component.js","components/slider/LeftArrow.js","components/slider/Slide.js","components/slider/RightArrow.js","components/slider/Slider.js","components/error/404.js","App.js","serviceWorker.js","index.js"],"names":["Navegation","to","CreatePhoto","props","useState","url","setUrl","description","setDescription","className","onSubmit","e","preventDefault","console","log","axios","post","then","response","history","push","class","htmlFor","id","aria-describedby","placeholder","type","name","value","onChange","target","for","rows","PhotoList","data","setData","showLoading","setShowLoading","useEffect","a","result","fetchData","scope","map","photo","key","_id","onClick","delete","catch","error","aria-hidden","pathname","EditPhoto","put","match","params","pushState","LeftArrow","message","goToPrevSlide","Slide","image","legend","styles","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","style","display","marginTop","backgroundColor","height","padding","RightArrow","goToNextSlide","Slider","goToPrevNumber","state","currentIndex","setState","prevState","translateValue","slideWidth","photos","length","document","querySelector","clientWidth","get","res","transform","this","transition","i","React","Component","PageNotFound","App","path","component","exact","Boolean","window","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1e44964d.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from \"react-router-dom\";\n\nconst Navegation = () =>{\n\n    return (\n        <nav>\n            <ul>\n               <li> <NavLink to='/create'>New Photo</NavLink></li>\n               <li><NavLink to='/list'>Photo List</NavLink></li>\n               <li><NavLink to='/'>Photo Slide</NavLink></li>\n            </ul>\n        </nav>\n\n    \n    );\n  }\nexport default Navegation;\n\n\n\n","import React , { useState }  from 'react';\nimport axios from 'axios';\nimport Navegation from './navegation.component';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconst CreatePhoto = (props) => {\n\n    const [url, setUrl] = useState('')\n    const [description, setDescription] = useState('')\n    \n    const savePhoto = e => {\n      e.preventDefault()\n      console.log({url, description})\n      axios.post('http://localhost:5001/add', { url:url, description: description })\n      .then(function(response){\n         props.history.push('/list')\n        console.log('salvo com sucesso')\n      });  \n    \n    }  \n  \n  return (\n    <div className=\"container-fluid\">\n    <div className=\"row\">\n    <div className=\"col-md-2\">\n        <Navegation />\n    </div>\n    <div className=\"col-md-10\">\n    <form     onSubmit={savePhoto}>\n    <div class=\"form-group\">\n    <label htmlFor=\"url\">Insert image URL</label> <br />\n    <input\n      className=\"form-control\"\n      id=\"url\" aria-describedby=\"urlHelp\" placeholder=\"Insert image url\"\n      type=\"text\"\n      name=\"url\"\n      value={url}\n      onChange={e => setUrl(e.target.value)}\n     />\n  \n        \n    </div>\n\n    <div class=\"form-group\">\n    <label for=\"description\">Image description</label>\n   \n    <textarea\n    name=\"description\"\n    rows=\"3\"\n    id=\"description\"\n    className=\"form-control\"\n    value={description}\n    onChange={e => setDescription(e.target.value)}\n    />\n \n  </div>\n \n    <button type=\"submit\" className=\"btn btn-primary\">Save</button>\n  </form>\n  </div>\n  </div>\n  </div>\n\n  );\n}\n\nexport default CreatePhoto;","\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Navegation from './navegation.component';\n\n\nconst PhotoList = (props) => {\n    const [data, setData] = useState([]);\n    const [showLoading, setShowLoading] = useState(true);\n  \n    useEffect(() => {\n      const fetchData = async () => {\n        const result = await axios(\n          'http://localhost:5001',\n        );\n        setData(result.data);\n        setShowLoading(false);\n      };\n      fetchData();\n    }, []);\n\n    const deletePhoto = (id) => {\n     setShowLoading(true);\n      axios.delete('http://localhost:5001/'+id)\n        .then((result) => {\n          setShowLoading(false);\n          props.history.push('/list')\n        }).catch((error) => setShowLoading(false));;\n    };\n\n    const EditPhoto = (id) => {\n      props.history.push({\n        pathname: '/edit/' + id\n      });\n    };\n  \n    return (\n         \n       <div className=\"container-fluid\">\n       <div className=\"row\">\n       <div className=\"col-md-2\">\n            <Navegation />\n       </div>\n       <div className=\"col-md-10\">\n       {showLoading >\n        <span className=\"sr-only\">Loading...</span>\n       }\n       <table class=\"table table-striped\">\n       <thead>\n         <tr>\n           <th scope=\"col\">#</th>\n           <th scope=\"col\">url</th>\n           <th scope=\"col\">description</th>\n         </tr>\n       </thead>\n       <tbody>\n       {data.map(photo => (\n         <tr key={photo._id}>\n         <th scope=\"row\">{photo._id}</th>\n         <td>{photo.url}</td> \n         <td>{photo.description}</td>\n         <td  onClick={() => { deletePhoto(photo._id) }}>   <i class=\"fa fa-trash\" aria-hidden=\"true\"></i></td>\n         <td  onClick={() => { EditPhoto(photo._id) }}> <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i></td>\n     \n         </tr>\n     \n     ))}\n     \n     \n       </tbody>\n     </table>\n       \n     </div>\n       </div> \n\n        \n\n    \n        \n        </div>\n    \n    );\n  }\nexport default PhotoList;","import React , { useState }  from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Navegation from './navegation.component';\n\nconst EditPhoto = (props) => {\n\n    const [url, setUrl] = useState('')\n    const [description, setDescription] = useState('')\n    const [showLoading, setShowLoading] = useState(true);\n    \n  \n    const updatePhoto = (e) => {\n        setShowLoading(true);\n        e.preventDefault();\n        const data = { url:url, description: description };\n        axios.put('http://localhost:5001/update/'+props.match.params.id, data)\n          .then((result) => {\n            setShowLoading(false);\n            props.history.pushState(null, 'list');\n          }).catch((error) => setShowLoading(false));\n      };\n  \n  return (\n\n    <div className=\"container-fluid\">\n    <div className=\"row\">\n    <div className=\"col-md-2\">\n        <Navegation />\n    </div>\n    <div className=\"col-md-10\">\n    <form     onSubmit={updatePhoto}>\n    <div class=\"form-group\">\n    {showLoading >\n        <span className=\"sr-only\">Loading...</span>\n       }\n    <label htmlFor=\"url\">Insert image URL</label> <br />\n    <input\n      className=\"form-control\"\n      id=\"url\" aria-describedby=\"urlHelp\" placeholder=\"Insert image url\"\n      type=\"text\"\n      name=\"url\"\n      value={url}\n      onChange={e => setUrl(e.target.value)}\n     />\n  \n        \n    </div>\n\n    <div class=\"form-group\">\n    <label for=\"description\">Image description</label>\n   \n    <textarea\n    name=\"description\"\n    rows=\"3\"\n    id=\"description\"\n    className=\"form-control\"\n    value={description}\n    onChange={e => setDescription(e.target.value)}\n    />\n \n  </div>\n  \n \n    <button type=\"submit\" className=\"btn btn-primary\">Save</button>\n  </form>\n  </div>\n  </div>\n  </div>\n\n  );\n}\n\nexport default EditPhoto;","import React from 'react';\n\nconst LeftArrow = (props,  { message}) => {\n  return (\n    <div className=\"backArrow\" onClick={props.goToPrevSlide}>\n      <p>12s</p>\n      <i className=\"fa fa-arrow-left fa-2x\" aria-hidden=\"true\"></i>\n    </div>\n  );\n}\n\nexport default LeftArrow;","\nimport React, { Fragment } from 'react'\n\nconst Slide = ({ image, legend}) => {\n  const styles = {\n    backgroundImage: `url(${image})`,\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: '50% 60%',\n    backgroundSize: 'contain',\n    \n  \n    \n  }\n  const legendStyles = {\n    display: 'block',\n    marginTop: '570px',\n    backgroundColor: 'whitesmoke',\n    height: 'auto',\n    padding: '20px',\n  }\n  return <div className=\"slide\" style={styles}> <span style={legendStyles}>{legend}</span></div> \n}\n\nexport default Slide","import React from 'react';\n\nconst RightArrow = (props) => {\n  return (\n    <div className=\"nextArrow\" onClick={props.goToNextSlide}>\n      <i className=\"fa fa-arrow-right fa-2x\" aria-hidden=\"true\"></i>\n    </div>\n  );\n}\n\nexport default RightArrow;","\n\nimport React from 'react';\nimport LeftArrow from './LeftArrow';\nimport Slide from './Slide';\nimport RightArrow from './RightArrow';\nimport axios from 'axios';\n\nimport \"./Slider.css\"\n\n\n\n\n\nclass Slider extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      photos: [],\n      currentIndex: 0,\n      translateValue: 0\n    }\n  }\n  componentDidMount() {\n    axios.get('http://localhost:5001/')\n      .then(res => {\n        const photos = res.data;\n        console.log(res.data)\n        this.setState({ photos });\n      })\n  }\n  goToPrevNumber = () => {\n  \n    return this.state.currentIndex;\n    console.log('====================================');\n    console.log(this.state.currentIndex);\n    console.log('====================================');\n  }\n  goToPrevSlide = () => {\n    if(this.state.currentIndex === 0)\n      return;\n    \n    this.setState(prevState => ({\n      currentIndex: prevState.currentIndex - 1,\n      \n      translateValue: prevState.translateValue + this.slideWidth()\n    }))\n  }\n\n  goToNextSlide = () => {\n    // Exiting the method early if we are at the end of the images array.\n    // We also want to reset currentIndex and translateValue, so we return\n    // to the first image in the array.\n    if(this.state.currentIndex === this.state.photos.length - 1) {\n      return this.setState({\n        currentIndex: 0,\n        translateValue: 0\n      })\n    }\n \n    \n    \n    // This will not run if we met the if condition above\n    this.setState(prevState => ({\n      currentIndex: prevState.currentIndex + 1,\n      translateValue: prevState.translateValue + -(this.slideWidth())\n    }));\n    \n    \n  }\n \n  slideWidth = () => {\n     return document.querySelector('.slide').clientWidth\n  }\n\n  render() {\n    return (\n      <div className=\"slider\">\n\n        <div className=\"slider-wrapper\"\n          style={{\n            transform: `translateX(${this.state.translateValue}px)`,\n            transition: 'transform ease-out 0.45s'\n          }}>\n            {\n              this.state.photos.map((image, i) => (\n                \n                <Slide key={i} image={image.url} legend={image.description}  />\n            \n                \n              ))\n            }\n        </div>\n        <LeftArrow \n         goToPrevSlide={this.goToPrevSlide}  message={\"1\"}\n        />\n\n\n        <RightArrow\n         goToNextSlide={this.goToNextSlide}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Slider;","import React   from 'react';\n\n\nconst PageNotFound = () => {\n\n \n  \n  return (\n\n    <h1>Page not Found</h1>\n\n\n  );\n}\n\nexport default PageNotFound;","import React   from 'react';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n \n} from \"react-router-dom\";\nimport CreatePhoto from './components/create-photo.component';\nimport PhotoList from './components/photo-list.component';\nimport EditPhoto from './components/edit-photo.component';\n\nimport Slider from './components/slider/Slider';\nimport PageNotFound from './components/error/404';\n\n\n\n\nconst App = () => {\n\n \n  \n  return (\n  <Router>\n\n  <Switch>\n    <Route path=\"/\" component={ Slider } exact />\n    <Route path='/create' component={CreatePhoto}   />\n    <Route path='/list' component=  { PhotoList }  />\n    <Route path='/edit/:id' component=  { EditPhoto }  />\n    <Route component=  { PageNotFound }  />\n    </Switch>\n    \n  </Router>\n\n \n\n\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}